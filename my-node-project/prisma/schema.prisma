// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId    Int      @id @default(autoincrement()) @map("userId")
  email     String   @unique @map("email")
  password  String   @map("password")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  userInfos UserInfos?
  resumes Resumes[]

  @@map("Users")
}

model UserInfos {
  userInfoId   Int      @id @default(autoincrement()) @map("userInfoId")
  userId       Int      @unique @map("userId")
  name         String   @map("name")
  age          Int      @map("age")
  gender       String   @map("gender")
  profileImage String?  @map("profileImage")
  createdAt    DateTime @default(now()) @map("createdAt")
  updatedAt    DateTime @updatedAt @map("updatedAt")

  user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)
  resumes Resumes[]

  @@map("UserInfos")
}

model Resumes {
  resumeId  Int      @id @default(autoincrement()) @map("resumeId")
  userId    Int      @map("userId") 
  userInfoId Int     @map("userInfoId") 
  status    String   @default(APPLY) @map("status")
  title     String   @map("title")
  intro     String   @map("intro") @db.Text
  exp       String?  @map("exp") @db.Text
  skill     String?  @map("skill") @db.Text
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userInfos UserInfos @relation(fields: [userInfoId], references: [userInfoId]) 

  @@map("Resumes")
}
enum status{
DROP
PASS
INTERVIEW1
INTERVIEW2
FINAL_PASS
}